name: ci

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

env:
  DENO_DIR: ../.deno_cache

jobs:
  test:
    strategy:
      matrix:
        deno: ['v1.x', 'canary']
        os:
          - macos-latest
          - ubuntu-latest

    timeout-minutes: 5
    runs-on: ${{ matrix.os }}

    steps:
      - name: 🏴‍☠️ Checkout
        uses: actions/checkout@v3

      - name: 📦 Cache
        uses: actions/cache@v3
        with:
          path: ${{ env.DENO_DIR }}
          key: ${{ hashFiles('lock.json') }}-${{ matrix.deno }}-${{ matrix.os }}

      - name: 🦕 Setup
        uses: denoland/setup-deno@v1

      - name: 🩺 Format
        if: startsWith(matrix.os, 'ubuntu') && matrix.deno == 'canary'
        uses: dprint/check@v2.0

      - name: 👩‍⚕️ Lint
        if: startsWith(matrix.os, 'ubuntu') && matrix.deno == 'canary'
        run: deno lint

      - name: 🩺 Typecheck
        run: deno task typecheck
        shell: bash
